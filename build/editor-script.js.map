{"version":3,"file":"editor-script.js","mappings":"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","sources":["webpack://ud-loop-block/./src/js/edit.js","webpack://ud-loop-block/./src/js/save.js","webpack://ud-loop-block/external window [\"wp\",\"blockEditor\"]","webpack://ud-loop-block/external window [\"wp\",\"components\"]","webpack://ud-loop-block/external window [\"wp\",\"data\"]","webpack://ud-loop-block/external window [\"wp\",\"element\"]","webpack://ud-loop-block/external window [\"wp\",\"i18n\"]","webpack://ud-loop-block/external window [\"wp\",\"serverSideRender\"]","webpack://ud-loop-block/external window \"ReactJSXRuntime\"","webpack://ud-loop-block/webpack/bootstrap","webpack://ud-loop-block/webpack/runtime/compat get default export","webpack://ud-loop-block/webpack/runtime/define property getters","webpack://ud-loop-block/webpack/runtime/hasOwnProperty shorthand","webpack://ud-loop-block/webpack/runtime/make namespace object","webpack://ud-loop-block/./src/js/editor.js"],"sourcesContent":["// src/edit.js\nimport { __ } from \"@wordpress/i18n\";\nimport { useBlockProps, InspectorControls } from \"@wordpress/block-editor\";\nimport {\n  PanelBody,\n  SelectControl,\n  ToggleControl,\n  Spinner,\n  TextControl,\n  Button,\n} from \"@wordpress/components\";\nimport { useEffect, useState, useMemo, useRef } from \"@wordpress/element\";\nimport { useSelect } from \"@wordpress/data\";\n\nimport ServerSideRender from \"@wordpress/server-side-render\";\n\n// Attribut-Merker: Werte pro postType merken/wiederherstellen\nfunction usePostTypeAttributeMemory(\n  postType,\n  attributeName,\n  value,\n  setAttributes,\n  shouldReset = () => false,\n  resetTo = false,\n) {\n  // Internes Speicherobjekt, das je postType den zuletzt gesetzten Wert hält\n  const memoryRef = useRef({});\n\n  useEffect(() => {\n    if (!postType) return;\n\n    // Wenn dieser postType zurückgesetzt werden soll, dann setze den Attributwert auf resetTo\n    if (shouldReset(postType)) {\n      if (value !== resetTo) {\n        setAttributes({ [attributeName]: resetTo });\n      }\n      return;\n    }\n\n    // Falls es einen gespeicherten Wert für diesen postType gibt, wende ihn an\n    if (postType in memoryRef.current) {\n      if (\n        typeof setAttributes === \"function\" &&\n        postType in memoryRef.current\n      ) {\n        setAttributes({ [attributeName]: memoryRef.current[postType] });\n      }\n    }\n  }, [postType]);\n\n  useEffect(() => {\n    // Speichere den aktuellen Wert nur, wenn kein Reset für diesen postType gelten soll\n    if (!shouldReset(postType)) {\n      memoryRef.current[postType] = value;\n    }\n  }, [postType, value]);\n}\n\nexport default function Edit({ attributes, setAttributes }) {\n  const {\n    postType,\n    sortMode,\n    sortOrder,\n    postCount,\n    breakpoints,\n    selectedPageId,\n    selectedPageParent,\n    filterFutureDates,\n    selectedTaxonomyTerm,\n    layoutStyle,\n  } = attributes;\n\n  // Lokale UI-Zustände\n  const [loading, setLoading] = useState(true);\n  const [localPostCount, setLocalPostCount] = useState(postCount ?? \"\");\n  const [localBreakpoints, setLocalBreakpoints] = useState(breakpoints ?? []);\n\n  // Inhaltstypen-Auswahl\n  const [postTypeOptions, setPostTypeOptions] = useState([]);\n\n  // Seitenstruktur (page)\n  const [parentPages, setParentPages] = useState([]);\n  const [hasPageChildren, setHasPageChildren] = useState(false);\n\n  // Datumsseiten (datetime-page)\n  const [datetimePages, setDatetimePages] = useState([]);\n  const [loadingDatetimePages, setLoadingDatetimePages] = useState(false);\n  const [hasDatetimeBlock, setHasDatetimeBlock] = useState(false);\n\n  // Taxonomien (bildungsangebote)\n  const [taxonomyTerms, setTaxonomyTerms] = useState([]);\n  const [loadingTerms, setLoadingTerms] = useState(false);\n\n  // Kombinierte Attributs-Signatur für SSR-Rendering\n  function buildSafeAttributesAndKey(attributes) {\n    const {\n      postType,\n      sortMode,\n      sortOrder,\n      postCount,\n      breakpoints,\n      selectedPageId,\n      selectedPageParent,\n      filterFutureDates,\n      selectedTaxonomyTerm,\n      layoutStyle,\n    } = attributes;\n\n    const safeAttrs = {\n      postType,\n      sortMode,\n      sortOrder,\n      postCount:\n        typeof postCount === \"string\"\n          ? parseInt(postCount, 10) || null\n          : postCount,\n      breakpoints: Array.isArray(breakpoints) ? breakpoints : [],\n      selectedPageId: Number.isFinite(selectedPageId) ? selectedPageId : 0,\n      selectedPageParent: Number.isFinite(selectedPageParent)\n        ? selectedPageParent\n        : null,\n      filterFutureDates: !!filterFutureDates,\n      selectedTaxonomyTerm: selectedTaxonomyTerm ?? \"\",\n      layoutStyle: layoutStyle || \"standard\", // 👈 hier ergänzt\n    };\n\n    const key = Object.values(safeAttrs)\n      .map((v) => (typeof v === \"object\" ? JSON.stringify(v) : String(v)))\n      .join(\"|\");\n\n    return { safeAttrs, key: `ud-loop-${key}` };\n  }\n\n  const { safeAttrs, key } = buildSafeAttributesAndKey(attributes);\n\n  // Lokale Kopien synchronisieren\n  useEffect(() => {\n    setLocalPostCount(postCount ?? \"\");\n  }, [postCount]);\n\n  useEffect(() => {\n    setLocalBreakpoints(breakpoints ?? []);\n  }, [breakpoints]);\n\n  /* =============================================================== *\\\n\t   Speichere oder stelle Attributwerte abhängig vom postType wieder her\n\t\\* =============================================================== */\n  // Merke: DATUM-FILTER: Nur aktiv bei bestimmten CPTs\n  usePostTypeAttributeMemory(\n    postType,\n    \"filterFutureDates\",\n    filterFutureDates,\n    setAttributes,\n    (pt) => pt === \"page\" || pt === \"ud_news\",\n  );\n\n  // Merke: Sortieroptionen  (datetime-block, published, menu-order)\n  usePostTypeAttributeMemory(postType, \"sortMode\", sortMode, setAttributes);\n  usePostTypeAttributeMemory(postType, \"sortOrder\", sortOrder, setAttributes);\n\n  // Merke: Beitragsanzahl (lokal & im Attribut)\n  usePostTypeAttributeMemory(postType, \"postCount\", postCount, setAttributes);\n\n  // Merke: Responsive Breakpoints\n  usePostTypeAttributeMemory(\n    postType,\n    \"breakpoints\",\n    breakpoints,\n    setAttributes,\n  );\n\n  // Merke: Taxonomie-Terms: Nur für ud_bildungsangebote\n  usePostTypeAttributeMemory(\n    postType,\n    \"selectedTaxonomyTerm\",\n    selectedTaxonomyTerm,\n    setAttributes,\n  );\n\n  /* =============================================================== *\\\n\t   Initiale Daten laden: Sichtbare postTypes, Elternseiten\n\t\\* =============================================================== */\n  useEffect(() => {\n    const excluded = [\n      // WordPress Core Post-Types, die irrelevant sind\n      \"attachment\",\n      \"nav_menu_item\",\n      \"revision\",\n      \"wp_block\",\n      \"wp_template\",\n      \"wp_template_part\",\n      \"wp_navigation\",\n      \"wp_global_styles\",\n      \"wp_font_family\",\n      \"wp_font_face\",\n    ];\n\n    Promise.all([\n      fetch(\"/wp-json/ud/v1/visible-post-types\").then((res) => res.json()),\n      fetch(\"/wp-json/ud/v1/pages-with-children\").then((res) => res.json()),\n    ])\n      .then(([types, pagesWithChildren]) => {\n        // Falls es \"page\"-Einträge mit Kindern gibt, füge sie hinzu\n        if (\n          pagesWithChildren.length > 0 &&\n          !types.find((t) => t.value === \"page\")\n        ) {\n          types.push({\n            label: __(\"Unterseiten\", \"ud-loop\"),\n            value: \"page\",\n          });\n        }\n\n        // Füge \"datetime-page\" als statische Option hinzu\n        types.push({\n          label: __(\"Einzelseite mit Datum-Blocks\", \"ud-loop\"),\n          value: \"datetime-page\",\n        });\n\n        setPostTypeOptions(types);\n\n        // Wenn kein postType gesetzt ist, verwende ersten verfügbaren\n        if (!attributes.postType && types.length > 0) {\n          setAttributes({ postType: types[0].value });\n        }\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  /* =============================================================== *\\\n\t   Datumshandling:\n\t   - datetime-page: verfügbare Seiten mit Datum-Block\n\t   - andere CPTs: prüfen, ob Datumsblock vorhanden\n\t\\* =============================================================== */\n\n  useEffect(() => {\n    if (postType !== \"datetime-page\") {\n      setHasDatetimeBlock(false);\n      setDatetimePages([]);\n      return;\n    }\n\n    setHasDatetimeBlock(true);\n    setAttributes({ sortMode: \"datetime-block\" });\n\n    setLoadingDatetimePages(true);\n\n    fetch(\"/wp-json/ud-loop-block/v1/datetime-pages\")\n      .then((res) => res.json())\n      .then((pages) => {\n        setDatetimePages(pages);\n\n        // Wenn nur eine Seite gefunden und keine gewählt → automatisch setzen\n        if (\n          pages.length === 1 &&\n          (!Number.isFinite(selectedPageId) ||\n            parseInt(selectedPageId, 10) <= 0)\n        ) {\n          const id = parseInt(pages[0].id, 10);\n          setAttributes({ selectedPageId: isNaN(id) ? 0 : id });\n        }\n      })\n      .catch(() => setDatetimePages([]))\n      .finally(() => setLoadingDatetimePages(false));\n  }, [postType]);\n\n  useEffect(() => {\n    if (!postType || postType === \"datetime-page\") return;\n\n    fetch(`/wp-json/ud/v1/has-datetime-block/${postType}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setHasDatetimeBlock(result.found);\n\n        if (!result.found && sortMode === \"datetime-block\") {\n          setAttributes({ sortMode: \"published\" });\n        }\n      })\n      .catch((err) => {\n        console.warn(\"Fehler beim Laden von has-datetime-block:\", err);\n      });\n  }, [postType]);\n\n  /* =============================================================== *\\\n\t   Seitenstruktur für postType \"page\":\n\t   - Elternseiten laden\n\t   - Auswahl zurücksetzen bei CPT-Wechsel\n\t\\* =============================================================== */\n\n  useEffect(() => {\n    if (postType !== \"page\") {\n      setAttributes({\n        selectedPageParent: null,\n      });\n    }\n  }, [postType]);\n\n  useEffect(() => {\n    if (postType !== \"page\") return;\n\n    fetch(\"/wp-json/ud/v1/pages-with-children\")\n      .then((res) => res.json())\n      .then((data) => {\n        setParentPages(data);\n        setHasPageChildren(data.length > 0);\n      });\n  }, [postType]);\n\n  /* =============================================================== *\\\n\t   Bildungsangebote:\n\t   - Taxonomie \"bildungsbereich\" laden\n\t   - Standardwert setzen\n\t\\* =============================================================== */\n\n  useEffect(() => {\n    if (postType !== \"ud_bildungsangebote\") return;\n\n    setLoadingTerms(true);\n    fetch(\"/wp-json/ud/v1/bildungsbereiche\")\n      .then((res) => res.json())\n      .then((terms) => {\n        setTaxonomyTerms(terms);\n      })\n      .catch(() => {\n        setTaxonomyTerms([]);\n      })\n      .finally(() => {\n        setLoadingTerms(false);\n      });\n  }, [postType]);\n\n  useEffect(() => {\n    if (\n      postType === \"ud_bildungsangebote\" &&\n      taxonomyTerms.length > 0 &&\n      !attributes.selectedTaxonomyTerm\n    ) {\n      setAttributes({\n        selectedTaxonomyTerm: taxonomyTerms[0].slug,\n      });\n    }\n  }, [postType, taxonomyTerms]);\n\n  /* =============================================================== *\\\n\t   Kindseiten-Analyse:\n\t   - Unterseiten einer Elternseite laden\n\t   - prüfen, ob ein datetime-block enthalten ist\n\t\\* =============================================================== */\n  const pages = useSelect(\n    (select) =>\n      select(\"core\").getEntityRecords(\"postType\", \"page\", {\n        per_page: -1,\n      }),\n    [],\n  );\n\n  const childPages = useSelect(\n    (select) => {\n      if (!selectedPageParent) return [];\n      return select(\"core\").getEntityRecords(\"postType\", \"page\", {\n        per_page: -1,\n        parent: selectedPageParent,\n      });\n    },\n    [selectedPageParent],\n  );\n\n  // Prüfen, ob eine dieser Unterseiten den Datumsblock enthält\n  const hasDatetimeBlockInChildPages = useMemo(() => {\n    if (!childPages || childPages.length === 0) return false;\n    return childPages.some((page) =>\n      page?.content?.rendered?.includes(\"ud/datetime-block\"),\n    );\n  }, [childPages]);\n\n  /* =============================================================== *\\\n\t   Unterstützt Sortierung nach Datum?\n\t   ergibt sich aus postType, Kindseiten oder Blockprüfung\n\t\\* =============================================================== */\n  let supportsDatetimeSort = false;\n\n  if (postType === \"datetime-page\") {\n    supportsDatetimeSort = true;\n  } else if (postType === \"page\" && hasDatetimeBlockInChildPages) {\n    supportsDatetimeSort = true;\n  } else if (hasDatetimeBlock) {\n    supportsDatetimeSort = true;\n  }\n\n  /* =============================================================== *\\\n  \t   Hilfsfunktionen für Breakpoint-Verwaltung im Panel\n\t\\* =============================================================== */\n  // Lokalen Breakpoint-Eintrag aktualisieren (z. B. maxWidth oder items)\n  const updateLocalBreakpoint = (index, field, value) => {\n    const updated = [...localBreakpoints];\n    updated[index] = {\n      ...updated[index],\n      [field]: parseInt(value, 10) || 0,\n    };\n    setLocalBreakpoints(updated);\n  };\n\n  // Breakpoint hinzufügen\n  const addLocalBreakpoint = () => {\n    setLocalBreakpoints([...localBreakpoints, { maxWidth: 0, items: 0 }]);\n  };\n\n  // Breakpoint entfernen\n  const removeLocalBreakpoint = (index) => {\n    const updated = [...localBreakpoints];\n    updated.splice(index, 1);\n    setLocalBreakpoints(updated);\n    setAttributes({ breakpoints: updated });\n  };\n\n  return (\n    <>\n      <InspectorControls>\n        <PanelBody title={__(\"Inhaltsquelle\", \"ud-loop\")} initialOpen={false}>\n          {loading ? (\n            <Spinner />\n          ) : (\n            <SelectControl\n              label={__(\"Inhaltstyp wählen\", \"ud-loop\")}\n              value={postType}\n              options={postTypeOptions}\n              onChange={(value) => setAttributes({ postType: value })}\n              __next40pxDefaultSize={true}\n              __nextHasNoMarginBottom={true}\n            />\n          )}\n\n          {postType === \"ud_bildungsangebote\" && (\n            <SelectControl\n              label={__(\"Bildungsbereich\", \"ud-loop\")}\n              value={attributes.selectedTaxonomyTerm ?? \"\"}\n              options={[\n                {\n                  label: __(\"Bitte wählen\", \"ud-loop\"),\n                  value: \"\",\n                },\n                ...taxonomyTerms.map((term) => ({\n                  label: term.name,\n                  value: term.slug,\n                })),\n              ]}\n              onChange={(value) => {\n                setAttributes({ selectedTaxonomyTerm: value });\n              }}\n              __next40pxDefaultSize={true}\n              __nextHasNoMarginBottom={true}\n            />\n          )}\n\n          {postType === \"page\" && hasPageChildren && (\n            <SelectControl\n              label={__(\"Elternseite wählen\", \"ud-loop\")}\n              help={__(\n                \"Es wird der Titel und das Beitragsbild angezeigt\",\n                \"ud-loop\",\n              )}\n              value={attributes.selectedPageParent ?? \"\"}\n              options={[\n                {\n                  label: __(\"Bitte wählen\", \"ud-loop\"),\n                  value: \"\",\n                },\n                ...parentPages.map((page) => ({\n                  label: page.title,\n                  value: page.id,\n                })),\n              ]}\n              onChange={(value) => {\n                const parsed = parseInt(value, 10);\n                setAttributes({\n                  selectedPageParent: isNaN(parsed) ? null : parsed,\n                });\n              }}\n              __next40pxDefaultSize={true}\n              __nextHasNoMarginBottom={true}\n            />\n          )}\n\n          {postType === \"datetime-page\" && (\n            <SelectControl\n              label={__(\"Seite wählen\", \"ud-loop\")}\n              value={attributes.selectedPageId}\n              options={\n                loadingDatetimePages\n                  ? [\n                      {\n                        label: __(\"Lade Seiten...\", \"ud-loop\"),\n                        value: 0,\n                      },\n                    ]\n                  : datetimePages.length > 0\n                  ? datetimePages.map((page) => ({\n                      label: page.title,\n                      value: page.id,\n                    }))\n                  : [\n                      {\n                        label: __(\n                          \"Keine Seite mit Datum-Zeit-Blocks gefunden\",\n                          \"ud-loop\",\n                        ),\n                        value: 0,\n                      },\n                    ]\n              }\n              onChange={(value) => {\n                const parsed = parseInt(value, 10);\n\n                setAttributes({\n                  selectedPageId: isNaN(parsed) ? 0 : parsed,\n                });\n              }}\n              __next40pxDefaultSize={true}\n              __nextHasNoMarginBottom={true}\n            />\n          )}\n        </PanelBody>\n        <PanelBody title={__(\"Sortierung \", \"ud-loop\")} initialOpen={false}>\n          <SelectControl\n            label={__(\"Sortierung nach\", \"ud-loop\")}\n            value={sortMode}\n            options={\n              postType === \"datetime-page\"\n                ? [\n                    {\n                      label: __(\"Datum-Zeit-Block\", \"ud-loop\"),\n                      value: \"datetime-block\",\n                    },\n                  ]\n                : [\n                    {\n                      label: __(\"Veröffentlichung\", \"ud-loop\"),\n                      value: \"published\",\n                    },\n                    hasDatetimeBlock && {\n                      label: __(\"Datum-Zeit-Block\", \"ud-loop\"),\n                      value: \"datetime-block\",\n                    },\n                    {\n                      label: __(\"Menü-Order (manuell)\", \"ud-loop\"),\n                      value: \"menu-order\",\n                    },\n                  ].filter(Boolean) // ← entfernt ggf. das leere Element, wenn hasDatetimeBlock false ist\n            }\n            onChange={(value) => setAttributes({ sortMode: value })}\n            __next40pxDefaultSize={true}\n            __nextHasNoMarginBottom={true}\n          />\n\n          {sortMode !== \"menu-order\" && (\n            <SelectControl\n              label={__(\"Sortierreihenfolge\", \"ud-loop\")}\n              value={attributes.sortOrder}\n              options={[\n                {\n                  label: __(\"Aufsteigend\", \"ud-loop\"),\n                  value: \"ASC\",\n                },\n                {\n                  label: __(\"Absteigend\", \"ud-loop\"),\n                  value: \"DESC\",\n                },\n              ]}\n              onChange={(value) => setAttributes({ sortOrder: value })}\n              __next40pxDefaultSize={true}\n              __nextHasNoMarginBottom={true}\n            />\n          )}\n        </PanelBody>\n        <PanelBody\n          title={__(\"Anzeigeoptionen \", \"ud-loop\")}\n          initialOpen={false}\n        >\n{postType === \"datetime-page\" && (\n<>\n          <SelectControl\n            label={__(\"Layout-Variante\", \"ud-loop\")}\n            value={attributes.layoutStyle}\n            options={[\n              { label: __(\"Standard\", \"ud-loop\"), value: \"standard\" },\n              {\n                label: __(\"Kompakte Kartenansicht\", \"ud-loop\"),\n                value: \"compact\",\n              },\n            ]}\n            onChange={(value) => setAttributes({ layoutStyle: value })}\n            __next40pxDefaultSize={true}\n            __nextHasNoMarginBottom={true}\n          />\n</>\n)}\n<TextControl\n  label={__(\"Maximale Beitragsanzahl\", \"ud-loop\")}\n  type=\"number\"\n  min=\"1\"\n  value={String(localPostCount ?? \"\")} // immer String\n  onChange={(val) => {\n    // val kommt aus dem Input-Feld: meist String oder undefined\n    setLocalPostCount(val?.toString().trim() ?? \"\");\n  }}\n  onBlur={() => {\n    const trimmed = String(localPostCount ?? \"\").trim();\n\n    if (trimmed === \"\") {\n      setAttributes({ postCount: null });\n      return;\n    }\n\n    const parsed = parseInt(trimmed, 10);\n    if (!isNaN(parsed) && parsed >= 1) {\n      setAttributes({ postCount: parsed });\n    }\n  }}\n  __next40pxDefaultSize={true}\n  __nextHasNoMarginBottom={true}\n/>\n\n\n          {postType !== \"page\" && postType !== \"ud_news\" && (\n            <>\n              <ToggleControl\n                label={__(\"Nur zukünftige Einträge anzeigen\", \"ud-loop\")}\n                checked={!!filterFutureDates}\n                onChange={(value) => {\n                  setAttributes({ filterFutureDates: value });\n                }}\n                __nextHasNoMarginBottom={true}\n              />\n            </>\n          )}\n        </PanelBody>\n        <PanelBody title={__(\"Breakpoints \", \"ud-loop\")} initialOpen={false}>\n          {localBreakpoints.map((bp, i) => (\n            <fieldset\n              key={i}\n              style={{\n                border: \"1px solid rgb(153 192 148)\",\n                padding: \"1em\",\n                marginBottom: \"1em\",\n                borderRadius: \"4px\",\n                background: \"#e5f3e2\",\n              }}\n            >\n              <legend\n                style={{\n                  background: \"#fff\",\n                  borderRadius: \"4px\",\n                  padding: \"0 5px\",\n                  border: \"1px solid #ccc\",\n                }}\n              >\n                {__(\"Breakpoint\", \"ud-loop\")} {i + 1}\n              </legend>\n              <TextControl\n                label={__(\"Bis Fensterbreite (px)\", \"ud-loop\")}\n                type=\"number\"\n                min=\"300\"\n                value={bp.maxWidth}\n                onChange={(val) => updateLocalBreakpoint(i, \"maxWidth\", val)}\n                onBlur={() =>\n                  setAttributes({\n                    breakpoints: localBreakpoints,\n                  })\n                }\n                __next40pxDefaultSize={true}\n                __nextHasNoMarginBottom={true}\n              />\n              <TextControl\n                label={__(\"Beiträge anzeigen (maximal)\", \"ud-loop\")}\n                type=\"number\"\n                min=\"1\"\n                value={bp.items}\n                onChange={(val) => updateLocalBreakpoint(i, \"items\", val)}\n                onBlur={() =>\n                  setAttributes({\n                    breakpoints: localBreakpoints,\n                  })\n                }\n                __next40pxDefaultSize={true}\n                __nextHasNoMarginBottom={true}\n              />\n              <Button\n                isDestructive\n                variant=\"link\"\n                onClick={() => removeLocalBreakpoint(i)}\n                style={{ marginTop: \"4px\" }}\n              >\n                {__(\"Entfernen\", \"ud-loop\")}\n              </Button>\n            </fieldset>\n          ))}\n\n          <Button variant=\"secondary\" onClick={addLocalBreakpoint}>\n            {__(\"Breakpoint hinzufügen\", \"ud-loop\")}\n          </Button>\n        </PanelBody>\n      </InspectorControls>\n\n      <div {...useBlockProps()}>\n        {postType === \"datetime-page\" ? (\n          !Array.isArray(pages) || pages.length === 0 || !selectedPageId ? (\n            <p style={{ padding: \"1rem\", color: \"#666\" }}>\n              Lade gültige Seiten oder Auswahl …\n            </p>\n          ) : pages.some((page) => page.id === selectedPageId) ? (\n            <ServerSideRender\n              block=\"ud/loop-block\"\n              attributes={safeAttrs}\n              key={key}\n            />\n          ) : (\n            <p style={{ padding: \"1rem\", color: \"darkred\" }}>\n              Die gewählte Seite ist nicht gültig.\n            </p>\n          )\n        ) : (\n          <ServerSideRender\n            block=\"ud/loop-block\"\n            attributes={safeAttrs}\n            key={key}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","// src/save.js\nexport default function Save() {\n    return null;\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * editor.js\n *\n * JavaScript für den Block-Editor (Gutenberg).\n * Wird ausschließlich im Backend geladen.\n *\n * Hinweis:\n * Diese Datei enthält editor-spezifische Interaktionen oder React-Komponenten.\n * Wird über webpack zu editor.js gebündelt und in block.json oder enqueue.php eingebunden.\n */\n\nimport edit from './edit';\nimport save from './save';\nimport metadata from '../../block.json';\n\nwp.blocks.registerBlockType(metadata.name, {\n    ...metadata,\n    edit,\n    save,\n});\n"],"names":["__","useBlockProps","InspectorControls","PanelBody","SelectControl","ToggleControl","Spinner","TextControl","Button","useEffect","useState","useMemo","useRef","useSelect","ServerSideRender","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","usePostTypeAttributeMemory","postType","attributeName","value","setAttributes","shouldReset","resetTo","memoryRef","current","Edit","attributes","_attributes$selectedT","_attributes$selectedP","sortMode","sortOrder","postCount","breakpoints","selectedPageId","selectedPageParent","filterFutureDates","selectedTaxonomyTerm","layoutStyle","loading","setLoading","localPostCount","setLocalPostCount","localBreakpoints","setLocalBreakpoints","postTypeOptions","setPostTypeOptions","parentPages","setParentPages","hasPageChildren","setHasPageChildren","datetimePages","setDatetimePages","loadingDatetimePages","setLoadingDatetimePages","hasDatetimeBlock","setHasDatetimeBlock","taxonomyTerms","setTaxonomyTerms","loadingTerms","setLoadingTerms","buildSafeAttributesAndKey","safeAttrs","parseInt","Array","isArray","Number","isFinite","key","Object","values","map","v","JSON","stringify","String","join","pt","excluded","Promise","all","fetch","then","res","json","types","pagesWithChildren","length","find","t","push","label","finally","pages","id","isNaN","catch","result","found","err","console","warn","data","terms","slug","select","getEntityRecords","per_page","childPages","parent","hasDatetimeBlockInChildPages","some","page","content","rendered","includes","supportsDatetimeSort","updateLocalBreakpoint","index","field","updated","addLocalBreakpoint","maxWidth","items","removeLocalBreakpoint","splice","children","title","initialOpen","options","onChange","__next40pxDefaultSize","__nextHasNoMarginBottom","term","name","help","parsed","filter","Boolean","type","min","val","_val$toString$trim","toString","trim","onBlur","trimmed","checked","bp","i","style","border","padding","marginBottom","borderRadius","background","isDestructive","variant","onClick","marginTop","color","block","Save","edit","save","metadata","wp","blocks","registerBlockType"],"sourceRoot":""}